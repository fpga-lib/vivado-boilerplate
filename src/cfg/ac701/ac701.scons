#-------------------------------------------------------------------------------
#
#    Variant construction script
#
#    Author: Harry E. Zhurov
#
#-------------------------------------------------------------------------------

import os

#-------------------------------------------------------------------------------
#
#    Configuration
#
cfg  = import_config('main.yml')
dirs = import_config('dirpath.yml')

#-------------------------------------------------------------------------------
#
#    Environment
#
Import('envx')

envx.Tool('vivado')
envx.Tool('questa')

envx['VIVADO_PROJECT_NAME'] = cfg.PROJECT_NAME
envx['TOP_NAME']            = cfg.TOP_NAME
envx['TESTBENCH_NAME']      = cfg.TESTBENCH_NAME
envx['DEVICE']              = cfg.DEVICE

# path
envx['SETTINGS_SEARCH_PATH'] = [dirs.SETTINGS]             # root dir for setting files (typically *.yml)
envx['INC_PATH']             = envx['BUILD_SRC_PATH']
envx['SIM_INC_PATH']         = envx['INC_PATH']

envx.Append(VLOG_FLAGS = ' -O5 -timescale=1ns/1ps')
envx.Append(VOPT_FLAGS = ' -O5 -L wlib -L unifast_ver -L unisims_ver -L unimacro_ver -L secureip -L xpmlib -L ipsimlib')

# user-defined parameters
envx.Append(USER_DEFINED_PARAMS = {'ROOT_DIR'      : envx['ROOT_PATH']})
envx.Append(USER_DEFINED_PARAMS = {'CFG_DIR'       : envx['CFG_PATH']})
envx.Append(USER_DEFINED_PARAMS = {'BUILD_SRC_DIR' : envx['BUILD_SRC_PATH']})

#-------------------------------------------------------------------------------
#
#    Sources
#
src     = read_sources('src_syn.yml')
src_sim = read_sources('src_sim.yml')
ip      = read_sources('ip.yml')

src_par = 'main.yml clk.yml'
src_xpr = ['src_syn.yml', 'xdc.yml', 'xpr_hook.tcl']

#-------------------------------------------------------------------------------
#
#    Targets
#

#   scripts
IP_Create_Scripts  = envx.IpCreateScripts(ip)
IP_Syn_Scripts     = envx.IpSynScripts(ip)
IP_Cores           = envx.CreateIps(IP_Create_Scripts)
IP_OOC_Syn         = envx.SynIps(IP_Syn_Scripts, IP_Cores)
                   
IP_SimLib_Scripts  = envx.IpSimLibScripts(IP_Cores)
IP_SimLib          = envx.CompileSimLib(IP_SimLib_Scripts)
                   
#   generated sources
CfgParamsHeader    = envx.CreateCfgParamsHeader(os.path.join(envx['BUILD_SRC_PATH'], 'cfg_params.svh'), src_par)
CfgParamsTcl       = envx.CreateCfgParamsTcl(os.path.join(envx['BUILD_SRC_PATH'], 'cfg_params.tcl'), 'params.yml')
                   
#   main targets
WLib               = envx.CompileWorkLib(src + src_sim)
VivadoProject      = envx.CreateVivadoProject(src_xpr , IP_Cores)
                
#   launch tools
LaunchQuestaGui    = envx.LaunchQuestaGui()
LaunchQuestaRun    = envx.LaunchQuestaRun()

SynthVivadoProject = envx.LaunchSynthVivadoProject(VivadoProject)
ImplVivadoProject  = envx.LaunchImplVivadoProject(SynthVivadoProject)
OpenVivadoProject  = envx.LaunchOpenVivadoProject(VivadoProject)

#   explicit dependencies and directives
Depends(WLib,              [IP_SimLib, CfgParamsHeader])
Depends(LaunchQuestaRun,   WLib)
Depends(VivadoProject, [CfgParamsHeader, CfgParamsTcl])
Depends(OpenVivadoProject, [IP_OOC_Syn])

if not 'xpr' in COMMAND_LINE_TARGETS: 
    Requires(VivadoProject, IP_OOC_Syn) 

envx.AlwaysBuild(WLib)
envx.AlwaysBuild(LaunchQuestaGui)

Default(WLib)
all = [WLib, ImplVivadoProject]

#-------------------------------------------------------------------------------
#
#    Target Aliases
#
envx.Alias('ipcs',       IP_Create_Scripts)
envx.Alias('ipss',       IP_Syn_Scripts)
envx.Alias('ip_cores',   IP_Cores)
envx.Alias('ip_ooc',     IP_OOC_Syn)
                         
envx.Alias('ip_sls',     IP_SimLib_Scripts)
envx.Alias('simlib',     IP_SimLib)
envx.Alias('cparam',     CfgParamsHeader)
envx.Alias('cparam-tcl', [CfgParamsTcl])
envx.Alias('wlib',       WLib)
envx.Alias('qs_gui',     LaunchQuestaGui)
envx.Alias('qs_run',     LaunchQuestaRun)

envx.Alias('xpr',        VivadoProject)
envx.Alias('xprsyn',     SynthVivadoProject)
envx.Alias('xprimpl',    ImplVivadoProject)
envx.Alias('xpropen',    OpenVivadoProject)

envx.Alias('all',        all)

#-------------------------------------------------------------------------------
#
#    Info
#
Help("""
    Variant 'ac701' available targets:
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ipcs       : IP Create Scripts
        ipss       : IP Synthesize Scripts
        ip_cores   : Create IPs
        ip_ooc     : Create IP design checkpoints by sythisizing of 'xci's

        ip_sls     : IP SimLib Scripts
        simlib     : IP SimLib (default)
        cparam     : generate parameter headers
        cparam-tcl : generate parameters list Tcl scripts
        wlib       : compile work library (default)
        qs_gui     : launch Questa GUI in destination dir with tool script loaded

        xpr        : create Vivado Project
        xprsyn     : synthesize Vivado Project
        xprimpl    : implement Vivado Project
        xpropen    : open Vivado Project in GUI mode

        all        : build wlib and xprimpl targets
********************************************************************************     
""")
#-------------------------------------------------------------------------------

