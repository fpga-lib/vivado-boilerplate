#-------------------------------------------------------------------------------
#
#    Construction variant script
#
#    Author: Harry E. Zhurov
#
#-------------------------------------------------------------------------------

import os

#-------------------------------------------------------------------------------
#
#    Configuration
#
cfg  = import_config('main.yml')
#ext  = import_config('filetype.yml')
dirs = import_config('dirpath.yml')

DEVICE = cfg.DEVICE

#-------------------------------------------------------------------------------
#
#    Environment
#
Import('envx')

envx.Tool('vivado')
envx.Tool('questa')

envx['VIVADO_PROJECT_NAME'] = cfg.PROJECT_NAME
envx['TOP_NAME']            = cfg.TOP_NAME
envx['TESTBENCH_NAME']      = cfg.TESTBENCH_NAME
envx['DEVICE']              = cfg.DEVICE


# path
envx['SETTINGS_SEARCH_PATH'] = [dirs.SETTINGS]             # root dir for setting files (typically *.yml)
envx['IPSIM_SRC_CFG_PATH']   = dirs.IPSIM_SRC_CFG          # path to dir with IP sim source list files
envx['INC_PATH']             = dirs.SRC
envx['SIM_INC_PATH']         = envx['INC_PATH']

envx.Append(VLOG_FLAGS = ' -O5 -timescale=1ns/1ps')
envx.Append(VOPT_FLAGS = ' -O5 -L wlib -L unifast_ver -L unisims_ver -L unimacro_ver -L secureip -L xpmlib -L ipsimlib')

#-------------------------------------------------------------------------------
#
#    Sources
#
src     = read_sources('src_syn.yml')
src_sim = read_sources('src_sim.yml')
ip      = read_sources('ip.yml')

#-------------------------------------------------------------------------------
#
#    Targets
#
IP_Create_Scripts = envx.IpCreateScripts(ip)
IP_Syn_Scripts    = envx.IpSynScripts(ip)
IP_Cores          = envx.CreateIps(IP_Create_Scripts)
IP_OOC_Syn        = envx.SynIps(IP_Syn_Scripts, IP_Cores)

IP_SimLib_Scripts = envx.IpSimLibScripts(IP_Cores)
IP_SimLib         = envx.CompileSimLib(IP_SimLib_Scripts)
                   
WLib              = envx.CompileWorkLib(src + src_sim)
CfgParamsHeader   = envx.CreateCfgParamsHeader(os.path.join(dirs.SRC, 'cfg_params.svh'), 'settings.yml main.yml')

LaunchQuestaGui   = envx.LaunchQuestaGui()

#-------------------------------------------------------------------------------
#
#    Targets Aliases
#
envx.Alias('ipcs',     IP_Create_Scripts)
envx.Alias('ipss',     IP_Syn_Scripts)
envx.Alias('ip_cores', IP_Cores)
envx.Alias('ip_ooc',   IP_OOC_Syn)

envx.Alias('ip_sls',   IP_SimLib_Scripts)
envx.Alias('simlib',   IP_SimLib)
envx.Alias('cparam',   CfgParamsHeader)
envx.Alias('wlib',     WLib)
envx.Alias('qs_gui',   LaunchQuestaGui)

Depends(WLib, [IP_SimLib, CfgParamsHeader])
envx.AlwaysBuild(WLib)
envx.AlwaysBuild(LaunchQuestaGui)

Default(WLib)

#-------------------------------------------------------------------------------
#
#    Info
#
Help("""
    Configuration 'top' available targets:
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ipcs     : IP Create Scripts
        ipss     : IP Synthesize Scripts
        ip_cores : Create IPs
        ip_ooc   : Create IP design checkpoints by sythisizing of 'xci's
        ip_sls   : IP SimLib Scripts
        simlib   : IP SimLib (default)
        cparam   : generate parameter headers
        wlib     : compile work library (default)
        qs_gui   : launch Questa GUI in destination dir with tool script loaded
********************************************************************************     
""")
#-------------------------------------------------------------------------------

